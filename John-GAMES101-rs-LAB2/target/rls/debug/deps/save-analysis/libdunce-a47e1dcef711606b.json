{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3","program":"/Users/kr/.rustup/toolchains/nightly-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","dunce","--edition=2018","/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=a47e1dcef711606b","-C","extra-filename=-a47e1dcef711606b","--out-dir","/Users/kr/Desktop/GAMES101-RUST-2023/John-GAMES101-rs-LAB2/target/rls/debug/deps","-L","dependency=/Users/kr/Desktop/GAMES101-RUST-2023/John-GAMES101-rs-LAB2/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/kr/.rustup/toolchains/nightly-aarch64-apple-darwin"],"output":"/Users/kr/Desktop/GAMES101-RUST-2023/John-GAMES101-rs-LAB2/target/rls/debug/deps/libdunce-a47e1dcef711606b.rmeta"},"prelude":{"crate_id":{"name":"dunce","disambiguator":[12707108290614573064,0]},"crate_root":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src","external_crates":[{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17597776811017068767,0]}},{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14429041787429074469,0]}},{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6090486777984981589,0]}},{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2629364036353529844,0]}},{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4080074450655046920,0]}},{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5907259990925294111,0]}},{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10493878511363669042,0]}},{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12555285910560445398,0]}},{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[2828314771408876961,0]}},{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7582621806116120425,0]}},{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2324381425420720695,0]}},{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17777536701376484160,0]}},{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[15325470721438668960,0]}},{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[11693887763302245694,0]}},{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[8512928500809439288,0]}},{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[14797301622246846764,0]}},{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[3748356315237825087,0]}},{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8278577221625794805,0]}},{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[8521860849321575787,0]}}],"span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":0,"byte_end":11377,"line_start":1,"line_end":324,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":18},"span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":3076,"byte_end":3088,"line_start":84,"line_end":84,"column_start":15,"column_end":27},"alias_span":null,"name":"realpath","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":0,"byte_end":11377,"line_start":1,"line_end":324,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":23}],"decl_id":null,"docs":" Filesystem paths in Windows are a total mess. This crate normalizes paths to the most\n compatible (but still correct) format, so that you don't have to worry about the mess.","sig":null,"attributes":[{"value":"/ Filesystem paths in Windows are a total mess. This crate normalizes paths to the most","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":0,"byte_end":89,"line_start":1,"line_end":1,"column_start":1,"column_end":90}},{"value":"/ compatible (but still correct) format, so that you don't have to worry about the mess.","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":90,"byte_end":180,"line_start":2,"line_end":2,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":181,"byte_end":184,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ In Windows the regular/legacy paths (`C:\\foo`) are supported by all programs, but have","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":185,"byte_end":275,"line_start":4,"line_end":4,"column_start":1,"column_end":91}},{"value":"/ lots of bizarre restrictions for backwards compatibility with MS-DOS.","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":276,"byte_end":349,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":350,"byte_end":353,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ And there are Windows NT UNC paths (`\\\\?\\C:\\foo`), which are more robust and with fewer","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":354,"byte_end":445,"line_start":7,"line_end":7,"column_start":1,"column_end":92}},{"value":"/ gotchas, but are rarely supported by Windows programs. Even Microsoft's own!","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":446,"byte_end":526,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":527,"byte_end":530,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This crate converts paths to legacy format whenever possible, but leaves UNC paths as-is","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":531,"byte_end":623,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ when they can't be unambiguously expressed in a simpler way. This allows legacy programs","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":624,"byte_end":716,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/ to access all paths they can possibly access, and UNC-aware programs to access all paths.","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":717,"byte_end":810,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":811,"byte_end":814,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ On non-Windows platforms these functions leave paths unmodified, so it's safe to use them","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":815,"byte_end":908,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"/ unconditionally for all platforms.","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":909,"byte_end":947,"line_start":15,"line_end":15,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":948,"byte_end":951,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Parsing is based on https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85).aspx","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":952,"byte_end":1055,"line_start":17,"line_end":17,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":1056,"byte_end":1059,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [Project homepage](https://crates.rs/crates/dunce).","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":1060,"byte_end":1115,"line_start":19,"line_end":19,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":16},"span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":2133,"byte_end":2143,"line_start":49,"line_end":49,"column_start":8,"column_end":18},"name":"simplified","qualname":"::simplified","value":"fn simplified(&Path) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Takes any path, and when possible, converts Windows UNC paths to regular paths.","sig":null,"attributes":[{"value":"/ Takes any path, and when possible, converts Windows UNC paths to regular paths.","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":1437,"byte_end":1520,"line_start":32,"line_end":32,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":1521,"byte_end":1524,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ On non-Windows this is no-op.","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":1525,"byte_end":1558,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":1559,"byte_end":1562,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ `\\\\?\\C:\\Windows` will be converted to `C:\\Windows`,","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":1563,"byte_end":1618,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/ but `\\\\?\\C:\\COM` will be left as-is (due to a reserved filename).","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":1619,"byte_end":1688,"line_start":37,"line_end":37,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":1689,"byte_end":1692,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Use this to pass arbitrary paths to programs that may not be UNC-aware.","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":1693,"byte_end":1768,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/ It's generally safe to pass UNC paths to legacy programs, because","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":1769,"byte_end":1838,"line_start":40,"line_end":40,"column_start":1,"column_end":70}},{"value":"/ the paths contain a reserved character, so will gracefully fail","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":1839,"byte_end":1906,"line_start":41,"line_end":41,"column_start":1,"column_end":68}},{"value":"/ if used with wrong APIs.","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":1907,"byte_end":1935,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":1936,"byte_end":1939,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ This function does not perform any I/O.","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":1940,"byte_end":1983,"line_start":44,"line_end":44,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":1984,"byte_end":1987,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Currently paths with unpaired surrogates aren't converted even if they","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":1988,"byte_end":2062,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ can be due to limitations of Rust's `OsStr` API.","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":2063,"byte_end":2115,"line_start":47,"line_end":47,"column_start":1,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":2116,"byte_end":2125,"line_start":48,"line_end":48,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":2537,"byte_end":2549,"line_start":61,"line_end":61,"column_start":8,"column_end":20},"name":"canonicalize","qualname":"::canonicalize","value":"fn canonicalize<P>(P) -> io::Result<PathBuf> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Like `std::fs::canonicalize()`, but on Windows it outputs the most\n compatible form of a path instead of UNC.\n","sig":null,"attributes":[{"value":"/ Like `std::fs::canonicalize()`, but on Windows it outputs the most","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":2395,"byte_end":2465,"line_start":58,"line_end":58,"column_start":1,"column_end":71}},{"value":"/ compatible form of a path instead of UNC.","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":2466,"byte_end":2511,"line_start":59,"line_end":59,"column_start":1,"column_end":46}},{"value":"inline(always)","span":{"file_name":"/Users/kr/.cargo/registry/src/github.com-1ecc6299db9ec823/dunce-1.0.3/src/lib.rs","byte_start":2512,"byte_end":2529,"line_start":60,"line_end":60,"column_start":1,"column_end":18}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}